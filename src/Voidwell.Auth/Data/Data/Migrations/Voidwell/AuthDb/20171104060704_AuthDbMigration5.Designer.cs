// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Voidwell.Auth.Data;

namespace Voidwell.Auth.Data.Data.Migrations.Voidwell.AuthDb
{
    [DbContext(typeof(AuthDbContext))]
    [Migration("20171104060704_AuthDbMigration5")]
    partial class AuthDbMigration5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Voidwell.Auth.Data.Models.Authentication", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<DateTimeOffset?>("LastLoginDate");

                    b.Property<string>("PasswordHash")
                        .IsRequired();

                    b.Property<string>("PasswordSalt")
                        .IsRequired();

                    b.Property<DateTimeOffset?>("PasswordSetDate");

                    b.HasKey("UserId");

                    b.ToTable("Authentication");
                });

            modelBuilder.Entity("Voidwell.Auth.Data.Models.Profile", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("DisplayName")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("TimeZone");

                    b.HasKey("UserId");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("Voidwell.Auth.Data.Models.SecurityQuestion", b =>
                {
                    b.Property<Guid>("UserId");

                    b.Property<string>("Question");

                    b.Property<string>("Answer")
                        .IsRequired();

                    b.HasKey("UserId", "Question");

                    b.ToTable("SecurityQuestions");
                });

            modelBuilder.Entity("Voidwell.Auth.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTimeOffset?>("Banned");

                    b.Property<DateTimeOffset?>("Created");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Voidwell.Auth.Data.Models.Authentication", b =>
                {
                    b.HasOne("Voidwell.Auth.Data.Models.User", "User")
                        .WithOne("Authentication")
                        .HasForeignKey("Voidwell.Auth.Data.Models.Authentication", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Voidwell.Auth.Data.Models.Profile", b =>
                {
                    b.HasOne("Voidwell.Auth.Data.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Voidwell.Auth.Data.Models.Profile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Voidwell.Auth.Data.Models.SecurityQuestion", b =>
                {
                    b.HasOne("Voidwell.Auth.Data.Models.User", "User")
                        .WithMany("SecurityQuestions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
